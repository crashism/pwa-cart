{"version":3,"sources":["icons/close-outline.svg","icons/add-outline.svg","components/cartContainer.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["_path","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCloseOutline","_ref","svgRef","title","titleId","props","xmlns","className","viewBox","ref","undefined","id","fill","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","ForwardRef","SvgAddOutline","CartContainer","useState","window","innerWidth","screenWidth","setScreenWidth","useRef","idCount","setIdCount","price","num","items","setItems","setPrice","useEffect","sum","forEach","value","parseFloat","onSum","onUpdate","updatedItems","map","item","largeScreen","style","width","smallScreen","type","name","onChange","e","toLocaleString","textAlign","onClick","filter","onDelete","App","setSum","alignItems","marginRight","color","total","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.cb1c1a8e.chunk.js","sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloseOutline(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"ionicon\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Close\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 32,\n    d: \"M368 368L144 144M368 144L144 368\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloseOutline);\nexport default __webpack_public_path__ + \"static/media/close-outline.a22b61b1.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgAddOutline(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    className: \"ionicon\",\n    viewBox: \"0 0 512 512\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"Add\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"none\",\n    stroke: \"currentColor\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 32,\n    d: \"M256 112v288M400 256H112\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgAddOutline);\nexport default __webpack_public_path__ + \"static/media/add-outline.019bb36e.svg\";\nexport { ForwardRef as ReactComponent };","import React, {useState, useEffect, useRef} from 'react';\r\nimport './cartContainer.css';\r\nimport {ReactComponent as Close} from '../icons/close-outline.svg';\r\nimport {ReactComponent as Add} from '../icons/add-outline.svg';\r\n\r\n\r\n  \r\ninterface pro {\r\n    onSum: any\r\n}\r\n\r\nconst CartContainer: React.FC<pro> = (props) => {\r\n\r\n    const [screenWidth, setScreenWidth] = useState(window.innerWidth);\r\n    const textInput = useRef<HTMLLinkElement>();\r\n    const [idCount, setIdCount] = useState(0);\r\n    const [items, setItems] = useState([{id: 0, title: \"\", price: \"\", num:1}]);\r\n    const [price, setPrice] = useState<any | null>(0);\r\n\r\n    useEffect(() => {\r\n        setScreenWidth(window.innerWidth);\r\n    });\r\n\r\n    useEffect(() => {\r\n        let sum = 0;\r\n        items.forEach(value => {\r\n            if(value.price.length>0)\r\n            sum += parseFloat(value.price)*value.num ;\r\n        });\r\n        if(typeof sum !== 'undefined') {\r\n            setPrice(sum);\r\n        }\r\n        props.onSum(sum);\r\n\r\n\r\n    }, [items]);\r\n\r\n\r\n    useEffect(() => {\r\n        setIdCount(idCount + 1)\r\n\r\n    }, [items.length]);\r\n\r\n    const onUpdate = (id: number, title: any, price: any | null, num: any) => {\r\n        \r\n        //const updatedItem = items.filter(item => item.id !== id);\r\n        //setItems([...updatedItem, {id, title, price, num}]);\r\n\r\n        const updatedItems: any | null= items.map((item) => {\r\n            if(item.id === id) {\r\n                return({id, title, price, num});\r\n            } else return item;\r\n        });\r\n        \r\n        setItems(updatedItems);\r\n        \r\n    }\r\n\r\n    const onDelete = (id: number) => {\r\n        \r\n        const updatedItems = items.filter(item => item.id !== id);\r\n        setItems(updatedItems);\r\n        \r\n    }\r\n\r\n    \r\n    const onAdd = () => {\r\n        setItems([...items, {id: idCount, title:\"\", price: \"\", num: 1} ])\r\n    }\r\n\r\n    \r\n    const largeScreen = <colgroup>\r\n        <col style={{width:\"60%\"}}/>\r\n        <col style={{width:\"20%\"}}/>\r\n        <col style={{width:\"10%\"}}/>\r\n        <col style={{width:\"10%\"}}/>\r\n    </colgroup> \r\n\r\n    const smallScreen = <colgroup>\r\n        <col style={{width:\"45%\"}}/>\r\n        <col style={{width:\"25%\"}}/>\r\n        <col style={{width:\"20%\"}}/>\r\n        <col style={{width:\"10%\"}}/>\r\n    </colgroup> \r\n\r\n\r\n  return (\r\n      <section>\r\n\r\n          \r\n\r\n        \r\n                \r\n                <div className=\"tbl-header\">\r\n                    <table>\r\n                        {screenWidth > 720? largeScreen : smallScreen}\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Title</th>\r\n                        <th>Price</th>\r\n                        <th>Count</th>\r\n                        <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    </table>\r\n                </div>\r\n                <div className=\"inputField\" > \r\n            {items.map(i => (\r\n                // <div style={{display: \"block\"}}>\r\n                //     <div style={{display: \"inline-block\", margin: 20}}><input className=\"inputPrompt\" type=\"text\" name=\"item\" onChange={e => onUpdate(i.id, e.target.value, i.price, i.num)} value={i.title} /></div>\r\n                //     <div style={{display: \"inline-block\", margin: 20, width: \"10%\", alignItems: 'right'}}><input className=\"inputPrompt\" type=\"number\"  name=\"price\"  onChange={e => onUpdate(i.id, i.title, e.target.value, i.num)} value={i.price}/> </div>\r\n                //     <div style={{display: \"inline-block\", marginLeft: 10}}><button onClick={e => onDelete(i.id)}><Close className=\"close-svg\"></Close></button></div>\r\n                    \r\n                // </div>\r\n                <div className=\"tbl-content\">\r\n                    <table >\r\n                    {screenWidth > 720? largeScreen : smallScreen}\r\n                        <tbody>\r\n                            <tr>\r\n                            <td><div className=\"inputContainer\"><input className=\"inputPrompt\" type=\"text\" name=\"item\" onChange={e => onUpdate(i.id, e.target.value, i.price, i.num)} value={i.title} /></div></td>\r\n                            <td><div className=\"inputContainer\"><input className=\"inputPrompt\" type=\"number\"  name=\"price\"  onChange={e => onUpdate(i.id, i.title, e.target.value, i.num)} value={i.price.toLocaleString()}/></div></td>\r\n                            <td><div className=\"inputContainer\"><input style={{textAlign: \"center\"}} className=\"inputPrompt numbers\" type=\"number\"  name=\"count\"  onChange={e => onUpdate(i.id, i.title, i.price, e.target.value)} value={i.num}/></div></td>\r\n                            <td><div className=\"inputContainer\"><button onClick={e => onDelete(i.id)}><Close className=\"close-svg\"></Close></button></div></td>\r\n                            </tr>\r\n                            \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n        <div>\r\n            <button onClick={onAdd}><Add className=\"add-svg\"></Add></button>\r\n        </div>\r\n\r\n      </section>\r\n    \r\n  );\r\n}\r\n\r\nexport default CartContainer;","import React, {useState} from 'react';\nimport CartContainer from './components/cartContainer';\nimport './App.css';\n\nfunction App() {\n\n  const [sum, setSum] = useState<any>(0);\n\n  const changeSum = (sum:any) => {\n    setSum(sum);\n  }\n  return (\n    <div className=\"App\">\n      <header style={{alignItems: \"flex-end\"}} className=\"App-header\">\n        <div style={{marginRight: 20, color:\"rgb(204, 83, 27)\"}}><h3>Sum = {sum.toLocaleString()}</h3></div>\n      </header>\n      <div>\n        <CartContainer onSum={(total:any) => setSum(total)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}